#!/usr/bin/env python
# This "installer" is not a true installer. It simply sets up symbolic links
# to the 3 subdirectories, i.e. for the question/type, question/behaviour and
# local/twig directories. It is intended for use by developers only because
# it means that changes to the source code are immediately "live", because
# the live code is symbolically linked to the developer code.
# It needs to be run only on the initial cloning of the repository.

from __future__ import print_function
import os
import subprocess

def printFailMessage():
    print("This script failed to set up the necessary symbolic links.")
    print("You will need to manually make the following symbolic links to ")
    print("directories in this module:")
    print("<moodlehome>/question/type/coderunner -> coderunner")
    print("<moodlehome>/question/behaviour/adaptive_adapted_for_coderunner -> adaptive_adapted_for_coderunner")
    print("<moodlehome>/local/Twig -> Twig")


def main():
    cwd = os.getcwd()
    if "moodle/local/CodeRunner" not in cwd:
        print("WARNING: CodeRunner appears not to have been cloned into moodle/local")
        print ("as recommended.")
        printFailMessage()
    else:
        try:
            searchString = "/moodle/local/CodeRunner"
            pos = cwd.index(searchString)
            basedir = cwd[0:pos]
            installdir = cwd[0:pos + len(searchString)]
            dirs = [("Twig", "moodle/local/Twig"),
                ("type/coderunner", "moodle/question/type/coderunner"),
                ("behaviour/adaptive_adapted_for_coderunner", "moodle/question/behaviour/adaptive_adapted_for_coderunner")]

            for (src,dest) in dirs:
                if os.path.isdir("{0}/{1}".format(basedir, dest)):
                    continue  # Directory already exists
                if subprocess.call("ln -s {0}/{1} {2}/{3}".format(installdir, src, basedir, dest), shell=True) != 0:
                    raise OSError("Failed to create symbolic link")
            print("Install complete.")

        except Exception as e:
            print("Exception when making symbolic links: " + str(e))
            printFailMessage()

main()
